#!/usr/bin/env bash
set -e

# ----------------------------------------------------------
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OCR-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –ø—Ä–∞–≤–∫–∏ pdf_parser.py
# ----------------------------------------------------------

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
PROJECT_DIR="${1:-.}"

echo "üöÄ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
cd "$PROJECT_DIR"

# 1) –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è OCR
echo "üì¶ apt-get update && install poppler-utils, tesseract-ocr, rus"
sudo apt update
sudo apt install -y poppler-utils tesseract-ocr tesseract-ocr-rus libtesseract-dev

# 2) –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [[ -f "venv/bin/activate" ]]; then
  echo "üêç –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º virtualenv"
  # shellcheck disable=SC1091
  source venv/bin/activate
else
  echo "‚ö†Ô∏è –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ venv –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–π—Ç–µ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º."
  exit 1
fi

# 3) –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è OCR
echo "üì¶ pip install pdf2image pytesseract pillow"
pip install --upgrade pip
pip install pdf2image pytesseract pillow

# 4) –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º services/pdf_parser.py —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π OCR
echo "üîß –û–±–Ω–æ–≤–ª—è–µ–º services/pdf_parser.py"
mkdir -p services
cat > services/pdf_parser.py << 'EOF'
import os
from typing import Tuple

# pdf2image + pytesseract –¥–ª—è OCR
from pdf2image import convert_from_path
import pytesseract

async def parse_pdf(path: str) -> Tuple[str, int]:
    """
    –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –≤—ã—Ç—è–Ω—É—Ç—å ¬´—á–∏—Å—Ç—ã–π¬ª —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ pdfplumber.
    –ï—Å–ª–∏ –æ–Ω –ø—É—Å—Ç–æ–π ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º OCR —á–µ—Ä–µ–∑ Tesseract.
    –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä—Ç–µ–∂ (text, page_count).
    """
    raw = ""
    try:
        import pdfplumber
        with pdfplumber.open(path) as pdf:
            pages = pdf.pages
            raw = "\\n".join(p.extract_text() or "" for p in pages)
            if raw.strip():
                return raw, len(pages)
    except Exception:
        raw = ""

    # OCR fallback: –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
    images = convert_from_path(path, dpi=300)
    ocr_texts = []
    for img in images:
        text = pytesseract.image_to_string(img, lang="rus+eng")
        ocr_texts.append(text)
    full_text = "\\n".join(ocr_texts).strip()
    return full_text, len(images)
EOF

echo "‚úÖ services/pdf_parser.py –æ–±–Ω–æ–≤–ª—ë–Ω."

# 5) –ó–∞–≤–µ—Ä—à–∞–µ–º
echo "üéâ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –∏ OCR-–ø–∞—Ä—Å–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
echo "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: python main.py"

